uri: 'file:///etc/ros/rosdep/amz/empty.tar'
md5sum: 1276481102f218c981e0324180bafd9f

install-script: |
  #!/bin/bash

  SUDO=
  if [ "$(id -u)" -ne 0 ]; then
    SUDO=sudo
  fi


  if ( [ "${PYLON_ROOT}" != "" ] && [ -d "${PYLON_ROOT}" ] ); then
    MAJOR=`${PYLON_ROOT}/bin/pylon-config --version-major`
    if [ "$MAJOR" = "7"  ]; then
      exit 0
    else
      echo "Found an existing Pylon installation in PYLON_ROOT but the version is too low"
      exit 1
    fi
  fi

  version_tar="7_4_0_14900"
  pkg_tar=pylon_${version_tar}_linux_x86_64_debs.tar.gz
  pkg_sup=pylon-supplementary-package-for-blaze-1.5.0.def07388_amd64.deb


  url="https://www2.baslerweb.com/media/downloads/software/pylon_software/${pkg_tar}"
  url_sup="https://www2.baslerweb.com/media/downloads/software/tof_software/${pkg_sup}"


  cache_dir="/usr/local/share/amz/cache"
  sudo mkdir -p "$cache_dir"

  if [ ! -e "$cache_dir/$pkg_tar" ]; then
    $SUDO wget --no-check-certificate -O "$cache_dir/$pkg_tar" $url
  fi

  if [ ! -e "$cache_dir/$pkg_sup" ]; then
    $SUDO wget --no-check-certificate -O "$cache_dir/$pkg_sup" $url_sup
  fi

  tar -xvzf "$cache_dir/$pkg_tar" -C .
  cp "$cache_dir/$pkg_sup" ./

  arch="$(uname -m)"
  if [ "$arch" == "armv7l" ]; then
    pkgarch="armhf"
  elif [ "$arch" == "aarch64" ]; then
    pkgarch="arm64"
  elif [ "$arch" == "arm64" ]; then
    pkgarch="arm64"
  elif [ "$arch" == "x86_64" ]; then
    pkgarch="amd64"
  else
    pkgarch="i386"
  fi

  version_debs="${version_tar//_/.}" # unfortunately the deb files use dots and tar archive uses underscores xD

  pkg_pylon=$(ls pylon*.deb)
  pkg_codemeter=$(ls codemeter*.deb)
  pkg_sup=$(ls pylon-supplementary*.deb)


  $SUDO apt-get update
  $SUDO apt-get install -y desktop-file-utils

  $SUDO dpkg -i $pkg_pylon
  $SUDO dpkg -i $pkg_codemeter

  $SUDO dpkg -i $pkg_sup

  echo "Pylon installed !"

check-presence-script: |
  #!/bin/bash
  if [ "${PYLON_ROOT}" = "" ]; then
    FOUND=$(find /opt -maxdepth 3 -type f -name pylon-config 2>/dev/null)
    if [[ ! -z "$FOUND" ]]; then
      for pylon_install in "$FOUND"; do
        MAJOR=`${pylon_install} --version-major`
        if [ "$MAJOR" = "7" ]; then
          echo "Found a pylon Installation with version 7"
          exit 0
        fi
      done
    fi
    echo "Could not find any pylon Installation with version 7"
    exit 1
  else
    if [ -d "${PYLON_ROOT}" ]; then
      MAJOR=`${PYLON_ROOT}/bin/pylon-config --version-major`
      if [ "$MAJOR" = "7" ]; then
        exit 0
      else
        echo "Found an existing Pylon installation in PYLON_ROOT but the version is too low"
        exit 2
      fi
      exit 0
    else
      echo "PYLON_ROOT is set but folder does not exist."
      exit 1
    fi
  fi
